//
// Magic (Responsive) Susy Grid System
//

$show-grid-backgrounds: true;

@import "susy";

// For full Susy documentation, visit: http://susy.oddbird.net/tutorial/

// Define mobile-first grid constants.
$total-columns      : 6;
// You can use ems, px or % to define the grid.
$column-width       : 60px;
$gutter-width       : 0px;
$grid-padding       : 0;

// Uncomment to make the grid fluid (w/ a max-width)
$container-style: fluid;
.container {
   max-width: 1150px;
}

// Define breakpoints, in this case when there's room for the specified columns.
$break-tablet:   8;
$break-desktop: 12;
$break-huge:    16;

.container {
	// Include `container` if this element will contain a grid system.
	@include container($total-columns);
	// Apply our grid background stripes for development.
	//@include susy-grid-background;
}

header, #main-content, footer {
	// Clearfix for full-width elements
	@include clearfix;
}

// Automatically reset the grid width & re-apply the grid background
// to responsive layouts.
$layouts: $break-tablet, $break-desktop, $break-huge;
@each $layout in $layouts{
	@include at-breakpoint($layout) {
		.container {
			@include set-container-width;
			//@include susy-grid-background;
		}
	}
} 

@include at-breakpoint($break-tablet) {
	
}

@include at-breakpoint($break-desktop) {
	.video-item {
		@include span-columns(6,12);
		margin-bottom:$gutter-width;
		&:nth-child(2n) {
			@include omega;
		}
	}
	.fifteen-wrap {
		@include pad(2,2);
	}
}

@include at-breakpoint($break-huge) {
	
}